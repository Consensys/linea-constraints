(module hub)


(defconst
G_cold_account_access 2600
G_warm_access 100)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;                           ;;;;
;;;;  12 Instruction handling  ;;;;
;;;;                           ;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;                         ;;
;;  12.10 SHF Constraints  ;;
;;                         ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(defconstraint shf-flag-constraint (:guard PEEK_AT_STACK)
 (if-eq 1 (* (+ ADD_FLAG BIN_FLAG EXT_FLAG MOD_FLAG MUL_FLAG SHF_FLAG WCP_FLAG)
            (- 1 (+ stack/SUX stack/SOX)))
    (begin
    ;; setting the stack pattern
     (if-eq EXT_FLAG 1 stack_pattern_3_1)
     (if-eq 1 (+ ADD_FLAG MOD_FLAG MUL_FLAG SHF_FLAG (* (+ BIN_FLAG WCP_FLAG) (- 1 FLAG_1))) stack_pattern_2_1)
     (if-eq 1 (* (+ BIN_FLAG WCP_FLAG) FLAG_1) stack_pattern_1_1)
     ;;setting the gas cost
     (eq! GAS_COST STATIC_GAS)
     ;; setting the nNSR
     (eq! NON_STACK_ROWS CONTEXT_MAY_CHANGE_FLAG))))


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;                         ;;
;;  12.12 CON Constraints  ;;
;;                         ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(defconstraint con-flag-constraint (:guard PEEK_AT_STACK)
        (if-eq 1 (* CON_FLAG (- 1 (+ stack/SUX stack/SOX)))
                (begin
                        ;; setting the stack pattern        
                        (stack_pattern_0_1)
                        ;; setting the gas cost
                        (eq! GAS_COST STATIC_GAS)
                        ;; setting the nNSR
                        (eq! NON_STACK_ROWS (+ 1 CONTEXT_MAY_CHANGE_FLAG))
                        ;;setting the peeking flags
                        (eq! (next CON_FLAG) 1)
                        (will-remain-constant! context/CONTEXT_NUMBER)
                        (vanihes! (next context/UPDATE))
                        ;; value constraints
                        (if-zero CONTEXT_MAY_CHANGE_FLAG
                                (begin
                                        (if-zero (+ FLAG_1 FLAG_2)
                                                (begin
                                                        (eq! [stack/STACK_ITEM_VALUE_HI 4] (next context/ACCOUNT_ADDRESS_HI))
                                                        (eq! [stack/STACK_ITEM_VALUE_LO 4] (next context/ACCOUNT_ADDRESS_LO))))
                                        (if-zero (+ FLAG_1 (- 1 FLAG_2))
                                                (begin
                                                        (eq! [stack/STACK_ITEM_VALUE_HI 4] (next context/CALLER_ADDRESS_HI))
                                                        (eq! [stack/STACK_ITEM_VALUE_LO 4] (next context/CALLER_ADDRESS_LO))))
                                        (if-zero (+ (- 1 FLAG_1) FLAG_2 FLAG_3)
                                                (begin
                                                        (vanishes! [stack/STACK_ITEM_VALUE_HI 4])
                                                        (eq! [stack/STACK_ITEM_VALUE_LO 4] (next context/CALL_VALUE))))
                                        (if-zero (+ (- 1 FLAG_1) FLAG_2 (- 1 FLAG_3))
                                                (begin
                                                        (vanishes! [stack/STACK_ITEM_VALUE_HI 4])
                                                        (eq! [stack/STACK_ITEM_VALUE_LO 4] (next context/CALL_DATA_SIZE))))
                                        (if-zero (+ (- 1 FLAG_1) (- 1 FLAG_2) FLAG_3)
                                                (begin
                                                        (vanishes! [stack/STACK_ITEM_VALUE_HI 4])
                                                        (eq! [stack/STACK_ITEM_VALUE_LO 4] (next context/RETURN_DATA_SIZE)))))))))


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;                         ;;
;;  12.13 ACC Constraints  ;;
;;                         ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;                                                       
(defconstraint acc-flag-constraint (:guard PEEK_AT_STACK)
        (if-eq 1 (+ ACC_FLAG (- 1 (+ stack/SUX stack/SOX)))
                (begin
                ;;setting the stack pattern
                        (if-zero FLAG_1
                                (stack_pattern_1_1)
                                (stack_pattern_0_1))
                        ;;setting nNSR
                        (if-zero FLAG_1
                                (eq! NON_STACK_ROWS (+ 1 CONTEXT_WILL_REVERT_FLAG CONTEXT_MAY_CHANGE_FLAG))
                                (eq! NON_STACK_ROWS (+ 2 CONTEXT_MAY_CHANGE_FLAG)))
                        ;; setting the peeking glags
                        (if-zero FLAG_1
                                (begin
                                        (eq! (next PEEK_AT_ACCOUNT) 1)
                                        (eq! (next storage/ADDRESS_HI) [stack/STACK_ITEM_VALUE_LO 1])
                                        (next account_viewing_h)
                                        (next turn_on_account_warmth_h)
                                        (if-eq CN_WILL_REV 1
                                                (begin
                                                        (eq! (shift PEEK_AT_ACCOUNT 2) 1)
                                                        (shift same_addr_and_dep_num_and_dep_stage_as_previously_v 2)
                                                        (shift account_viewing_h 2)
                                                        (shift undo_account_warmth_update_v 2))))
                                (begin
                                        (eq! (+ (next PEEK_AT_CONTEXT (shift PEEK_AT_ACCOUNT))) 2)
                                        (shift account_viewing_h 2)
                                        (if-zero FLAG_2
                                                (begin
                                                        (eq! (shift account/ADDRESS_HI 2) (next context/BYTE_CODE_ADDRESS_HI))
                                                        (eq! (shift account/ADDRESS_LO 2) (next context/BYTE_CODE_ADDRESS_LO)))
                                                (begin 
                                                        (eq! (shift account/ADDRESS_HI 2) (next context/ACCOUNT_ADDRESS_HI))
                                                        (eq! (shift account/ADDRESS_LO 2) (next context/ACCOUNT_ADDRESS_LO))))))
                        ;; setting the gas cost
                        (if-zero FLAG_1
                                (if-zero (next account/WARM)
                                        (eq! GAS_COST (+ STATIC_GAS G_cold_account_access))
                                        (eq! GAS_COST (+ STATIC_GAS G_warm_access)))
                                (eq! GAS_COST STATIC_GAS))
                        ;; value constraints
                        (if-zero (+ FLAG_1 FLAG_2 FLAG_3)
                                (begin
                                        (vanishes! [stack/STACK_ITEM_VALUE_HI 4])
                                        (eq! [stack/STACK_ITEM_VALUE_LO 4] (next account/BALANCE))))
                        (if-zero (+ FLAG_1 FLAG_2 (- 1 FLAG_3))
                                (begin
                                        (vanishes! [stack/STACK_ITEM_VALUE_HI 4])
                                        (eq! [stack/STACK_ITEM_VALUE_LO 4] (next account/CODE_SIZE))))
                        (if-zero (+ FLAG_1 (- 1 FLAG_2) FLAG_3)
                                (begin
                                        (eq! [stack/STACK_ITEM_VALUE_HI 4] (next account/CODE_HASH_HI))
                                        (eq! [stack/STACK_ITEM_VALUE_LO 4] (next account/CODE_HASH_LO))))
                        (if-zero (+ (- 1 FLAG_1) FLAG_2)
                                (begin
                                        (vanishes! [stack/STACK_ITEM_VALUE_HI 4])
                                        (eq! [stack/STACK_ITEM_VALUE_LO 4] (shift account/CODE_SIZE 2))))               
                        (if-zero (+ (- 1 FLAG_1) (- 1 FLAG_2))
                                (begin
                                        (vanishes! [stack/STACK_ITEM_VALUE_HI 4])
                                        (eq! [stack/STACK_ITEM_VALUE_LO 4] (shift account/BALANCE 2)))))))


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;                          ;;
;;  12.13 COPY Constraints  ;;
;;                          ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;  

(defconstraint copy-flag-constraint (:guard PEEK_AT_STACK)
        (if-zero (+ (- 1 COPY_FLAG) stack/SUX stack/SOX)
                (begin
                        ;;setting the stack pattern
                        (copy_stack_pattern TRM_FLAG)
                        ;; setting the nNSR
                        (eq! NON_STACK_ROWS (+ 1 CONTEXT_MAY_CHANGE_FLAG))
                        ;; setting the ReturnDataCopyException
                        (if-eq FLAG_3 1
                                (eq! stack/RETURNDATACOPY_EXCEPTION OOB_FLAG))
                        ;; setting the peeking flags
                        (if-zero FLAG_1
                                (eq! (next PEEK_AT_CONTEXT) 1)
                                (eq! (next PEEK_AT_ACCOUNT) 1))
                        ;;setting the gas cost
                        (eq! GAS_COST (* (- 1 MXPX)
                                         (+ STATIC_GAS QUAD_COST LIN_COST (* TRM_FLAG 
                                                                             (+ (* (- 1 (next account/WARM)) G_cold_account_access) (* (next account/WARM) G_warm_access))))))
                        ;; Value constraints
                        (if-zero FLAG_1
                                (begin
                                        (eq! (next context/CONTEXT_NUMBER) CONTEXT_NUMBER)
                                        (next read_context_data CONTEXT_NUMBER))
                                (if-zero FLAG_2
                                        (begin
                                        (eq! (next account/ADDRESS_HI) (next BYTE_CODE_ADDRESS_HI))
                                        (eq! (next account/ADDRESS_LO) (next BYTE_CODE_ADDRESS_LO))
                                        (eq! (account/DEPLOYMENT_NUMBER) (next BYTE_CODE_DEPLOYMENT_NUMBER))
                                        (eq! (next (account/DEPLOYMENT_STATUS) (next BYTE_CODE_DEPLOYMENT_STATUS)))
                                        (next same_dep_num_and_status_h)
                                        (next account_viewing_h))
                                        (begin
                                        (eq! (next account/ADDRESS_LO) ([stack/STACK_ITEM_VALUE_LO 4]))
                                        (next same_dep_num_and_status_h)
                                        (next account_viewing_h)))))))


;; TODO TBC
