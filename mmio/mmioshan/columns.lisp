(module mmioshan (>= EVM_FORK EVM_SHANGHAI))

(defcolumns
  (CN_A :i64 :display :dec)
  (CN_B :i64 :display :dec)
  (CN_C :i64 :display :dec)
  (INDEX_A :i64 :display :dec)
  (INDEX_B :i64 :display :dec)
  (INDEX_C :i64 :display :dec)
  (VAL_A :i128)
  (VAL_B :i128)
  (VAL_C :i128)
  (VAL_A_NEW :i128)
  (VAL_B_NEW :i128)
  (VAL_C_NEW :i128)
  (BYTE_A :byte@prove)
  (BYTE_B :byte@prove)
  (BYTE_C :byte@prove)
  (ACC_A :i128)
  (ACC_B :i128)
  (ACC_C :i128)
  (MMIO_STAMP :i32 :display :dec)
  (MMIO_INSTRUCTION :i16 :display :hex)
  (CONTEXT_SOURCE :i64 :display :dec)
  (CONTEXT_TARGET :i64 :display :dec)
  (SOURCE_LIMB_OFFSET :i64 :display :dec)
  (TARGET_LIMB_OFFSET :i64 :display :dec)
  (SOURCE_BYTE_OFFSET :i8 :display :dec)
  (TARGET_BYTE_OFFSET :i8 :display :dec)
  (SIZE :i64 :display :dec)
  (LIMB :i128)
  (TOTAL_SIZE :i64 :display :dec)
  (EXO_SUM :i32)
  (EXO_ID :i32)
  (KEC_ID :i32)
  (PHASE :i32)
  (SUCCESS_BIT :binary)
  (IS_LIMB_VANISHES :binary@prove)
  (IS_LIMB_TO_RAM_TRANSPLANT :binary@prove)
  (IS_LIMB_TO_RAM_ONE_TARGET :binary@prove)
  (IS_LIMB_TO_RAM_TWO_TARGET :binary@prove)
  (IS_RAM_TO_LIMB_TRANSPLANT :binary@prove)
  (IS_RAM_TO_LIMB_ONE_SOURCE :binary@prove)
  (IS_RAM_TO_LIMB_TWO_SOURCE :binary@prove)
  (IS_RAM_TO_RAM_TRANSPLANT :binary@prove)
  (IS_RAM_TO_RAM_PARTIAL :binary@prove)
  (IS_RAM_TO_RAM_TWO_TARGET :binary@prove)
  (IS_RAM_TO_RAM_TWO_SOURCE :binary@prove)
  (IS_RAM_EXCISION :binary@prove)
  (IS_RAM_VANISHES :binary@prove)
  (FAST :binary)
  (SLOW :binary)
  (EXO_IS_ROM :binary@prove)
  (EXO_IS_KEC :binary@prove)
  (EXO_IS_LOG :binary@prove)
  (EXO_IS_TXCD :binary@prove)
  (EXO_IS_ECDATA :binary@prove)
  (EXO_IS_RIPSHA :binary@prove)
  (EXO_IS_BLAKEMODEXP :binary@prove)
  (INDEX_X :i64)
  (BYTE_LIMB :byte@prove)
  (ACC_LIMB :i128)
  (BIT :binary :array [1:5])
  (ACC :i128 :array [1:4])
  (POW_256 :i128 :array [1:2])
  (COUNTER :i8))

(defalias
  STAMP MMIO_STAMP
  CT    COUNTER
  CNS   CONTEXT_SOURCE
  CNT   CONTEXT_TARGET
  SLO   SOURCE_LIMB_OFFSET
  SBO   SOURCE_BYTE_OFFSET
  TLO   TARGET_LIMB_OFFSET
  TBO   TARGET_BYTE_OFFSET)


