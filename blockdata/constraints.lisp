(module blockdata)

(defconstraint first-row (:domain {0})
  (vanishes! REL_BLOCK))

(defconstraint padding-is-padding ()
  (if-zero REL_BLOCK
           (begin (vanishes! FIRST_BLOCK_NUMBER)
                  (vanishes! INST))))

(defconstraint rel-block-increment ()
  (or! (will-remain-constant! REL_BLOCK) (will-inc! REL_BLOCK 1)))

(defconstraint new-block-reset-ct ()
  (if-not-zero (remained-constant! REL_BLOCK)
               (vanishes! CT)))

(defconstraint heartbeat (:guard REL_BLOCK)
  (begin (will-remain-constant! FIRST_BLOCK_NUMBER)
         (if-eq-else CT MAX_CT (will-inc! REL_BLOCK 1) (will-inc! CT 1))))

(defconstraint counter-constancies ()
  (begin (counter-constancy CT REL_TX_NUM_MAX)
         (counter-constancy CT COINBASE_HI)
         (counter-constancy CT COINBASE_LO)
         (counter-constancy CT BLOCK_GAS_LIMIT)
         (counter-constancy CT BASEFEE)))

(defconstraint horizontal-byte-dec ()
  (begin (eq! DATA_HI
              (+ (* (^ 256 (- LLARGEMO 0))
                    [BYTE_HI 0])
                 (* (^ 256 (- LLARGEMO 1))
                    [BYTE_HI 1])
                 (* (^ 256 (- LLARGEMO 2))
                    [BYTE_HI 2])
                 (* (^ 256 (- LLARGEMO 3))
                    [BYTE_HI 3])
                 (* (^ 256 (- LLARGEMO 4))
                    [BYTE_HI 4])
                 (* (^ 256 (- LLARGEMO 5))
                    [BYTE_HI 5])
                 (* (^ 256 (- LLARGEMO 6))
                    [BYTE_HI 6])
                 (* (^ 256 (- LLARGEMO 7))
                    [BYTE_HI 7])
                 (* (^ 256 (- LLARGEMO 8))
                    [BYTE_HI 8])
                 (* (^ 256 (- LLARGEMO 9))
                    [BYTE_HI 9])
                 (* (^ 256 (- LLARGEMO 10))
                    [BYTE_HI 10])
                 (* (^ 256 (- LLARGEMO 11))
                    [BYTE_HI 11])
                 (* (^ 256 (- LLARGEMO 12))
                    [BYTE_HI 12])
                 (* (^ 256 (- LLARGEMO 13))
                    [BYTE_HI 13])
                 (* (^ 256 (- LLARGEMO 14))
                    [BYTE_HI 14])
                 (* (^ 256 (- LLARGEMO 15))
                    [BYTE_HI 15])))
         (eq! DATA_LO
              (+ (* (^ 256 (- LLARGEMO 0))
                    [BYTE_LO 0])
                 (* (^ 256 (- LLARGEMO 1))
                    [BYTE_LO 1])
                 (* (^ 256 (- LLARGEMO 2))
                    [BYTE_LO 2])
                 (* (^ 256 (- LLARGEMO 3))
                    [BYTE_LO 3])
                 (* (^ 256 (- LLARGEMO 4))
                    [BYTE_LO 4])
                 (* (^ 256 (- LLARGEMO 5))
                    [BYTE_LO 5])
                 (* (^ 256 (- LLARGEMO 6))
                    [BYTE_LO 6])
                 (* (^ 256 (- LLARGEMO 7))
                    [BYTE_LO 7])
                 (* (^ 256 (- LLARGEMO 8))
                    [BYTE_LO 8])
                 (* (^ 256 (- LLARGEMO 9))
                    [BYTE_LO 9])
                 (* (^ 256 (- LLARGEMO 10))
                    [BYTE_LO 10])
                 (* (^ 256 (- LLARGEMO 11))
                    [BYTE_LO 11])
                 (* (^ 256 (- LLARGEMO 12))
                    [BYTE_LO 12])
                 (* (^ 256 (- LLARGEMO 13))
                    [BYTE_LO 13])
                 (* (^ 256 (- LLARGEMO 14))
                    [BYTE_LO 14])
                 (* (^ 256 (- LLARGEMO 15))
                    [BYTE_LO 15])))))

(defconstraint value-constraints (:guard (- REL_BLOCK (prev REL_BLOCK)))
  (begin  ; Coinbase
         (eq! (shift INST ROW_SHIFT_COINBASE) EVM_INST_COINBASE)
         (vanishes! (+ (* (^ 256 (- LLARGEMO 0))
                          [BYTE_LO 0])
                       (* (^ 256 (- LLARGEMO 1))
                          [BYTE_LO 1])
                       (* (^ 256 (- LLARGEMO 2))
                          [BYTE_LO 2])
                       (* (^ 256 (- LLARGEMO 3))
                          [BYTE_LO 3])
                       (* (^ 256 (- LLARGEMO 4))
                          [BYTE_LO 4])
                       (* (^ 256 (- LLARGEMO 5))
                          [BYTE_LO 5])
                       (* (^ 256 (- LLARGEMO 6))
                          [BYTE_LO 6])
                       (* (^ 256 (- LLARGEMO 7))
                          [BYTE_LO 7])
                       (* (^ 256 (- LLARGEMO 8))
                          [BYTE_LO 8])
                       (* (^ 256 (- LLARGEMO 9))
                          [BYTE_LO 9])
                       (* (^ 256 (- LLARGEMO 10))
                          [BYTE_LO 10])
                       (* (^ 256 (- LLARGEMO 11))
                          [BYTE_LO 11])))
         (eq! (shift DATA_HI ROW_SHIFT_COINBASE) COINBASE_HI)
         (eq! (shift DATA_LO ROW_SHIFT_COINBASE) COINBASE_LO)
         ; TIMESTAMP
         (eq! (shift INST ROW_SHIFT_TIMESTAMP) EVM_INST_TIMESTAMP)
         (if-not-zero (- REL_BLOCK 1)
                      (eq! (shift WCP_FLAG ROW_SHIFT_TIMESTAMP) 1))
         (vanishes! (shift DATA_HI ROW_SHIFT_TIMESTAMP))
         (vanishes! (+ (* (^ 256 (- LLARGEMO 0))
                          [BYTE_LO 0])
                       (* (^ 256 (- LLARGEMO 1))
                          [BYTE_LO 1])
                       (* (^ 256 (- LLARGEMO 2))
                          [BYTE_LO 2])
                       (* (^ 256 (- LLARGEMO 3))
                          [BYTE_LO 3])
                       (* (^ 256 (- LLARGEMO 4))
                          [BYTE_LO 4])
                       (* (^ 256 (- LLARGEMO 5))
                          [BYTE_LO 5])
                       (* (^ 256 (- LLARGEMO 6))
                          [BYTE_LO 6])
                       (* (^ 256 (- LLARGEMO 7))
                          [BYTE_LO 7])
                       (* (^ 256 (- LLARGEMO 8))
                          [BYTE_LO 8])
                       (* (^ 256 (- LLARGEMO 9))
                          [BYTE_LO 9])))
         ; NUMBER
         (eq! (shift INST ROW_SHIFT_NUMBER) EVM_INST_NUMBER)
         (vanishes! (shift DATA_HI ROW_SHIFT_NUMBER))
         (vanishes! (+ (* (^ 256 (- LLARGEMO 0))
                          [BYTE_LO 0])
                       (* (^ 256 (- LLARGEMO 1))
                          [BYTE_LO 1])
                       (* (^ 256 (- LLARGEMO 2))
                          [BYTE_LO 2])
                       (* (^ 256 (- LLARGEMO 3))
                          [BYTE_LO 3])
                       (* (^ 256 (- LLARGEMO 4))
                          [BYTE_LO 4])
                       (* (^ 256 (- LLARGEMO 5))
                          [BYTE_LO 5])
                       (* (^ 256 (- LLARGEMO 6))
                          [BYTE_LO 6])
                       (* (^ 256 (- LLARGEMO 7))
                          [BYTE_LO 7])
                       (* (^ 256 (- LLARGEMO 8))
                          [BYTE_LO 8])
                       (* (^ 256 (- LLARGEMO 9))
                          [BYTE_LO 9])))
         (eq! (shift DATA_LO ROW_SHIFT_NUMBER)
              (+ FIRST_BLOCK_NUMBER (- REL_BLOCK 1)))
         ; DIIFICULTY
         (eq! (shift INST ROW_SHIFT_DIFFICULTY) EVM_INST_DIFFICULTY)
         (vanishes! (shift DATA_HI ROW_SHIFT_DIFFICULTY))
         (eq! (shift DATA_LO ROW_SHIFT_DIFFICULTY) LINEA_DIFFICULTY)
         ; GASLIMIT
         (eq! (shift INST ROW_SHIFT_GASLIMIT) EVM_INST_GASLIMIT)
         (vanishes! (shift DATA_HI ROW_SHIFT_GASLIMIT))
         (eq! (shift DATA_LO ROW_SHIFT_GASLIMIT) LINEA_BLOCK_GAS_LIMIT)
         (eq! BLOCK_GAS_LIMIT (shift DATA_LO ROW_SHIFT_GASLIMIT))
         ; CHAINID
         (eq! (shift INST ROW_SHIFT_CHAINID) EVM_INST_CHAINID)
         (vanishes! (shift DATA_HI ROW_SHIFT_CHAINID))
         ;(eq! (shift DATA_LO ROW_SHIFT_CHAINID) LINEA_CHAIN_ID)
         ; BASEFEE
         (eq! (shift INST ROW_SHIFT_BASEFEE) EVM_INST_BASEFEE)
         (vanishes! (shift DATA_HI ROW_SHIFT_BASEFEE))
         (eq! (shift DATA_LO ROW_SHIFT_BASEFEE) LINEA_BASE_FEE)
         (eq! BASEFEE (shift DATA_LO ROW_SHIFT_BASEFEE))))


